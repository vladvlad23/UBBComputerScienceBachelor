from random import *
from datetime import *

class RandomMovieGenerator:

    def randomGenreGenerator(self):
        '''
        The function will create a list of movie genres and return a random genre from it
        :return: a random genre
        '''

        possibleGenres = ["action", "adventure", "crime", "comedy", "drama", "fantasy", "horror", "musical",
                          "wester", "thriller"]

        randomIndex = randint(0, len(possibleGenres) - 1)

        randomGenre = possibleGenres[randomIndex]
        return randomGenre

    def randomTitleGenerator(self):
        '''
        The function will generate a random title from a list of nouns, a list of adjectives and
        a list of articles/numerals/others ("the","some" etc)

        :return: a string containing the concatenation of 2 random strings from the list of adjectives and
        nouns separated and preceded by an article
        '''

        nouns = ["men", "women", "Christmas", "mouse", "bullet", "car", "lamp", "dog", "ghost", "story",
                 "bat", "hero", "drunk", "holiday", "tornado", "cowboy"]

        adjectives = ["angry", "happy", "drunk", "fast", "unusual", "accidental", "extreme", "bored",
                      "merciful", "scared", "haunted"]

        precedingList = ["The", "Some", "Any", "The third", "The first", "The chosen", "The Story of the"]

        randomNoun = nouns[randint(0, len(nouns) - 1)]
        randomAdjective = adjectives[randint(0, len(adjectives) - 1)]
        randomPreceding = precedingList[randint(0, len(precedingList) - 1)]

        hasPreceding = randint(0, 1000)
        if (hasPreceding % 2) == 0:
            finalRandomTitle = randomPreceding + " " + randomAdjective + " " + randomNoun
        else:
            finalRandomTitle = randomAdjective + " " + randomNoun
        return finalRandomTitle

    def randomDescriptionGenerator(self):
        '''
        Function will return a random description generated by a number of lists containing general
        nouns, adjectives, verbs
        :return: a random string containing a random description
        '''

        generalNouns = ["A man", "A woman", "", "A very active person",
                        "A mysterious man", "A problem kid", "A grieving widow", "A scared boy"]

        generalVerbs = ["finds itself", "grows into", "depends on", "is distracted by", "finds itself in trouble with",
                        "gets hurt attempting to aid"]

        generalAdjective = ["another one", "someone different", "an unusual situation", "a trivial thing",
                            "its creator", "an unusual individual", "many troublesome events",
                            "a series of unfortunate events"]

        randomNoun = generalNouns[randint(0, len(generalNouns) - 1)]
        randomVerb = generalVerbs[randint(0, len(generalVerbs) - 1)]
        randomAdjective = generalAdjective[randint(0, len(generalVerbs) - 1)]

        finalRandomDescription = randomNoun + " " + randomVerb + " " + randomAdjective
        return finalRandomDescription


class RandomClientGenerator:

    def __init__(self):
        pass

    def randomClientNameGenerator(self):
        '''
        Function will define a list of last names and a list of first names. It will randomly pick from
        each list an element. They will be concatenated and separated by a space. The final result
        will be the random name generated
        :return: random string of a fist name and last name picked in the function randomly and separated by space
        '''
        lastNames = ["Iacoban", "Ungureanu", "Pop", "Popescu", "Georgescu", "Popa", "Alexandrescu",
                     "Marinescu", "Morohoschi", "Circiu", "Piticari", "Bazga", "Paduraru", "Olar",
                     "Visinescu", "Alexandri", "Alibaba", "Florea", "Margean", "Zdrob", "Taran"]

        firstNames = ["Andrei", "Alexandru", "Tudor", "Toader", "Cristian", "Dorin", "Dorinel",
                      "Vlad", "Vladimir", "Ioan", "Ionut", "Aspazia", "Andreea", "Alexandra", "Georgiana",
                      "Camelia", "Adriana", "Adina", "Alina", "Adrian", "Alin", "George", "Grigore"]

        randomLastName = lastNames[randint(0, len(lastNames) - 1)]
        randomFirstName = firstNames[randint(0, len(firstNames) - 1)]

        randomName = randomLastName + " " + randomFirstName
        return randomName

class RandomDateGenerator:
    def generateReturnDate(self,rentalDate):
        '''
        Function will generate a random return date past the rental date(up until 120 days)
        :return: a random date according to the conditions
        '''

        hasReturned = randint(1, 100)
        if hasReturned < 10:
            return None

        randomDays = randint(1, 120)
        randomReturnDate = rentalDate + timedelta(days=randomDays)
        return randomReturnDate

    def generateDateOfRental(self):
        '''
        Function will generate a random date using the date(day
        :return: a random date using the constructor date(year,month,day)
        '''
        try:
            day = randint(1, 31)  # the last day is used for inventory of the store :)
            month = randint(1, 12)
            year = randint(1990, 2017)
            return date(year, month, day)
        except ValueError:  # if the date isn't oki, generate another one
            return self.generateDateOfRental()

    def generateDueDate(self,rentalDate):
        '''
        Function will generate a random due date after the given date with 1-14 days
        :param rentalDate:
        :return: a random date after the given date
        '''

        randomDays = randint(2, 15)
        randomDueDate = rentalDate + timedelta(days=randomDays)
        return randomDueDate

class RandomRentalGenerator:
    pass


